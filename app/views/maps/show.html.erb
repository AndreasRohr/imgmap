<h1>
  <%= @map.title %>
</h1>
<h2> Images </h2>
<table>
  <% @map.image_sets.each do |image_set| %>
    <tr>
      <td><%= image_set.title %></td>
      <td><%= image_set.typ %></td>
      <td><%= image_set.color %></td>
    </tr>
  <% end %>
</table>
<input style="width: 1000px;" type="range" min="1" max="150" step="0.1" value="100" oninput="resizeMarker(this.value)">
<div style=" display: flex;position: absolute; top: 10px; right: 10px">
  <%= button_to 'Edit', edit_map_path(@map), method: :get, class: 'btn btn-primary custom-button' %>

</div>

<div style="height: 85vh" id="map"></div>

<%= javascript_include_tag "https://maps.googleapis.com/maps/api/js?key=AIzaSyBbBMrnS3KrUYYoOJ_k9a8EoOFaicyxCAw&callback=initMap", defer: true %>
<script>
    var marker;
    var imageheight;
    var imagewidth;

    function initMap() {
        getMeta('<%= image_path("overlay.jpg") %>', (err, img) => {
            imageheight = img.naturalHeight;
            imagewidth = img.naturalWidth;

            console.log(imageheight);
            console.log(imagewidth);
        });

        var latLng = {lat: <%= @map.lat %>, lng: <%= @map.lng %>};
        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: <%= @map.zoom %>,
            center: { lat: <%= @map.lat %>, lng: <%= @map.lng %> },
            minZoom: <%= @map.zoom %> -1,
            draggable: false,
        });

        marker = new google.maps.Marker({
            position: latLng,
            map,
            scaledSize: (imagewidth,imageheight),
            draggable:true,
            icon: "<%= image_path("overlay.jpg") %>"
        });
    }

    function resizeMarker(size) {
        var aspectRatio = imagewidth/imageheight
        console.log(aspectRatio)

        marker.setIcon({
            url: '<%= image_path("overlay.jpg") %>',
            scaledSize: new google.maps.Size( (imagewidth*size)/100 * aspectRatio,(imageheight*size)/100 * aspectRatio),
        });
    }

    const getMeta = (url, cb) => {
        const img = new Image();
        img.onload = () => cb(null, img);
        img.onerror = (err) => cb(err);
        img.src = url;
    };



</script>

